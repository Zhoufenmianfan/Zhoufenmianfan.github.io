<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux饥荒服务器搭建教程</title>
    <link href="/2024/01/06/Linux%E9%A5%A5%E8%8D%92%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <url>/2024/01/06/Linux%E9%A5%A5%E8%8D%92%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="1️⃣安装SteamCMD"><a href="#1️⃣安装SteamCMD" class="headerlink" title="1️⃣安装SteamCMD"></a>1️⃣安装SteamCMD</h2><ul><li><p><strong>云服务器</strong>：可以使用任意远程终端工具连接到自己的云服务器，这里用Tabby做演示；</p></li><li><p><strong>创建Linux用户</strong>：由于在root用户下安装会有一定的安全风险，所以建议创建一个新的用户，在另一个用户下安装；</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo useradd -m steam #创建名为steam的用户<br>sudo passwd steam #为用户steam设置密码<br>sudo -u steam -s #进入steam用户<br></code></pre></td></tr></table></figure><ul><li><strong>安装SteamCMD</strong>：进入指定的一个目录，例如&#x2F;home&#x2F;steam，这个就是作为steam用户的根目录，不同的Linux系统用不同的安装指令；<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install steamcmd #Ubuntu&amp;Debian<br>yum install steamcmd # CentOS&amp;RedHat<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果不能正确下载请注意是否是对应的包管理器版本过低等问题</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果出现权限不足的问题，那么就回到root用户进行下载</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">也可以下载tar包再解压的办法（实际这个比较方便）</span><br>wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz  <br>tar -zxvf steamcmd_linux.tar.gz<br></code></pre></td></tr></table></figure></li><li><strong>运行SteamCMD</strong>：出现图所示Steam&gt;即为成功；<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install glibc.i686 libstdc++.i686 #首先要升级运行库，RedHat/CentOS (x86-64)<br>./steamcmd.sh #在解压出steamcmd_tar的目录下运行<br></code></pre></td></tr></table></figure></li></ul><h2 id="2️⃣饥荒服务端配置"><a href="#2️⃣饥荒服务端配置" class="headerlink" title="2️⃣饥荒服务端配置"></a>2️⃣饥荒服务端配置</h2><ul><li><p>文件路径配置：创建一个用于保存饥荒服务器端的文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">force_install_dir /home/dstserver <br></code></pre></td></tr></table></figure></li><li><p>下载饥荒：需要先匿名登录steam，或者使用自己的用户账户&amp;密码登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">login anonymous<br>app_update 343050 validate #下载or更新饥荒（如果饥荒客户端有更新，同样服务端也需要更新，否则搜不到自己的服务器存档）<br>quit #下载更新完成后退出SteamCMD<br></code></pre></td></tr></table></figure></li><li><p>启动服务端：在服务端路径运行一次即可生成对应的World存档（方便后续直接通过覆盖配置文件的方式来获得想要的配置的存档）；</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /home/dstserver/bin<br>./master_start.sh #启动主世界，Ctrl+C关闭<br>./cave_start.sh #启动洞穴世界，Ctrl+C关闭<br></code></pre></td></tr></table></figure><ul><li>覆盖存档：需要在本地创建一个世界，注意把自己想要的Mod（服务端Mod）开启（这样才能自动创建自己需要的服务端Mod的配置文件，当然后续也可以自己主动修改配置文件来重新添加服务端Mod）；将存档的所有文件覆盖掉服务器上的存档文件；</li><li>获取Token：由于需要绑定服务器信息，因此需要获取服务器Token，以确定这个服务器的地址；同样在饥荒启动首页点击【账户信息】跳转至Klei页面，点击查看我的游戏，找到右上角Don’t Strave Together Servers，创建一个token，集群名字任意（token是一串pds-开头的字符串）；复制token保存为一个cluster_token.txt文件中；</li></ul><h2 id="3️⃣Mod配置"><a href="#3️⃣Mod配置" class="headerlink" title="3️⃣Mod配置"></a>3️⃣Mod配置</h2><ul><li>配置文件路径：如果想在原有的基础上继续添加mod就需要更改配置文件，一共有两个地方的配置文件，一个是存档文件夹下的modoverrides.lua文件（注意Master和Caves下各有一个同样的文件），另一个是服务器配置中的dedicated_server_mods_setup.lua文件；</li><li>Mod编号：每一个创意工坊中的Mod都有唯一的APPID，可以通过分享的方式在链接中查看；</li><li>修改配置文件：</li></ul><h2 id="4️⃣启动游戏"><a href="#4️⃣启动游戏" class="headerlink" title="4️⃣启动游戏"></a>4️⃣启动游戏</h2><ul><li>Screen命令：由于游戏需要运行两个程序，而一般需要后台运行，因此可以使用linux的窗口screen功能，基本指令如下；<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">screen -S [NAME] #创建一个名字为[NAME]的窗口<br>screen -ls #列出窗口的id.[NAME]<br>screen -r [id] #如果一个窗口是（Deattached）状态，可以重连<br>screen -d [id] #退出一个窗口<br>exit #退出一个窗口并关闭此窗口（相应的进程也会关闭）<br></code></pre></td></tr></table></figure></li><li>启动游戏：分布在指定路径下创建两个名字为master和cave的窗口；然后在对应的窗口运行游戏的两个进程即可；游戏正常启动会看见有类似Sim Pause的字符<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd dstsever/bin<br>screen -S master<br>./master_start.sh<br><span class="hljs-meta prompt_"># </span><span class="language-bash">可以直接退出上述的终端，不要输入<span class="hljs-built_in">exit</span>，窗口就不会关闭（只会失去连接），进程也不会结束</span><br>cd dstsever/bin<br>screen -S cave<br>./cave_start.sh<br></code></pre></td></tr></table></figure></li><li>加入服务器：直接在浏览游戏中搜索房间名字即可；</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术文章</category>
      
      <category>Linux</category>
      
      <category>steam</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SteamCMD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒服务器自动更新教程</title>
    <link href="/2024/01/06/%E9%A5%A5%E8%8D%92%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%95%99%E7%A8%8B/"/>
    <url>/2024/01/06/%E9%A5%A5%E8%8D%92%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="1️⃣文件树结构"><a href="#1️⃣文件树结构" class="headerlink" title="1️⃣文件树结构"></a>1️⃣文件树结构</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">注意以下就是绝对路径/steam</span><br>└── steam #（用户）根目录<br>├── common #饥荒游戏存档服务器相关目录<br>│ ├── backup #备份文件夹<br>│ ├── dstsave #存档目录<br>│ └── dstserver #服务器目录<br>├── cron_update_starve.sh #定时更新程序<br>├── steamcmd #steamcmd服务目录<br>│ ├── linux32<br>│ ├── linux64<br>│ ├── package<br>│ ├── public<br>│ ├── siteserverui<br>│ ├── steam<br>│ ├── steamcmd_linux.tar.gz<br>│ └── steamcmd.sh #steamcmd启动脚本<br>├── update_starve.cmd #更新饥荒服务端命令库<br>└── update_starve.sh #更新饥荒服务端脚本<br></code></pre></td></tr></table></figure><h2 id="2️⃣定时调度"><a href="#2️⃣定时调度" class="headerlink" title="2️⃣定时调度"></a>2️⃣定时调度</h2><p>📌如果想要服务器定期执行一些列动作，就需要一个定时器来指定需要执行的程序脚本</p><ul><li><strong>crontab</strong>：可以制定一个进程表<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">[root@VM-8-6-centos]$ </span><span class="language-bash">crontab -e <span class="hljs-comment">#编辑当前用户的时程表</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">VI中编辑</span><br>0 2 * * * /steam/cron_update_starve.sh #每天的凌晨2：00执行一次.sh<br></code></pre></td></tr></table></figure></li><li>定时调度脚本：cron_update_starve.sh中需要装载执行一次饥荒服务器更新时需要的所有动作（指令集）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">第一行的<span class="hljs-comment">#！符号表示用于指定shell脚本的解释器是用/bin/bash</span></span><br>set -e #指定shell脚本的工作模式<br>/steam/common/dstserver/bin/stop.sh #第一步：执行停机脚本，关闭正在运行的饥荒服务端，避免数据丢失<br>sleep 5 #休眠5分钟<br>/steam/update_starve.sh #第二步：执行饥荒服务端的更新脚本<br>/steam/common/dstserver/bin/start.sh #第三步：执行饥荒服务端的启动脚本<br></code></pre></td></tr></table></figure></li></ul><h2 id="3️⃣饥荒服务端更新"><a href="#3️⃣饥荒服务端更新" class="headerlink" title="3️⃣饥荒服务端更新"></a>3️⃣饥荒服务端更新</h2><ul><li>停机脚本：stop.sh 关闭正在运行的饥荒服务端，避免数据丢失；<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>pids=$(ps aux | grep dontstarve | awk -v OFS=&#x27;,&#x27; &#x27;&#123;print $2,$11&#125;&#x27;) #获取进程的PID<br>array=($&#123;pids// / &#125;)<br>for var in $&#123;array[@]&#125;<br>do<br>    item=($&#123;var//,/ &#125;)<br>    result=`echo $&#123;item[1]&#125; | grep dontstarve`<br>    if [[ &quot;$result&quot; != &quot;&quot; ]]<br>    then<br>          rs=$(kill -9 $&#123;item[0]&#125;)<br>    fi<br>done<br></code></pre></td></tr></table></figure></li><li>更新脚本：update_starve.sh 更新饥荒服务端；<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>/steam/steamcmd/steamcmd.sh &lt; /steam/update_starve.cmd #将.cmd指令集中的指令重定向到使用SteamCMD命令行打开后执行<br></code></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs perl">force_install_dir /steam/common/dstserver <span class="hljs-comment">#SteamCMD命令行中强制安装在指定目录指令</span><br>login anonymous <span class="hljs-comment">#匿名登录</span><br>app_update <span class="hljs-number">343050</span> validate <span class="hljs-comment">#更新饥荒（在steam中代码为343050）</span><br>quit <span class="hljs-comment">#退出SteamCMD</span><br></code></pre></td></tr></table></figure></li><li>启动脚本：start.sh 重新启动饥荒服务端；</li></ul><pre><code class="shell">#!/bin/bashset -eSCRIPT_DIR=&quot;$( cd &quot;$( dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot; )&quot; &amp;&amp; pwd )&quot;cd $SCRIPT_DIRnohup ./start_master.sh  &gt;/dev/null 2&gt;&amp;1 &amp;nohup ./start_cave.sh    &gt;/dev/null 2&gt;&amp;1 &amp;</code></pre>]]></content>
    
    
    <categories>
      
      <category>技术文章</category>
      
      <category>Linux</category>
      
      <category>steam</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SteamCMD</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
